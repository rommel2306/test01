---
# Source: apache-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: apache-configs
  namespace: core 
  annotations:
    meta.helm.sh/release-name: cluster-configs
    meta.helm.sh/release-namespace: default
data:
  httpd.oneshield.conf: "### OneShield Section ###\n<VirtualHost *:80>\nServerName core.domain.com\n# ServerAlias environmentname\nDocumentRoot \"/opt/oneshield/oshome/webroot\"\nRewriteEngine On\nRewriteCond %{HTTP_HOST}   !^core\\.domain\\.com [NC]\nRewriteCond %{HTTP_HOST}   !^$\nRewriteRule ^/(.*)         https://core.domain.com/$1 [L,R]\n</VirtualHost>\n<VirtualHost *:443>\nServerName core.domain.com\n# ServerAlias environmentname\nDocumentRoot \"/opt/oneshield/oshome/webroot\"\nDefaultType None\n### Proxy Pass Configuration Section\nSSLProxyEngine on\nProxyPass /oneshield/dragon/images !\nProxyPass /oneshield/dragon/skins !\nProxyPass /oneshield/dragon/theme !\nProxyPass /pentaho https://core.domain.com:8443/pentaho timeout=300\nProxyPassReverse /pentaho https://core.domain.com/pentaho timeout=300\nProxyPassMatch \"^(/.*\\.js)$\" !\nProxyPassMatch \"^(/.*\\.css)$\" !\nProxyPassMatch \"^(/.*\\.png)$\" !\nProxyPassMatch \"^(/.*\\.gif)$\" !\nProxyPassMatch \"^(/.*\\.ico)$\" !\nProxyPassMatch \"^(/.*\\.jpg)$\" !\nProxyPassMatch \"^(/.*\\.jpeg)$\" !\nProxyPassMatch \"^(/.*\\.ttf)$\" !\nProxyPassMatch \"^(/.*\\.otf)$\" !\nProxyPassMatch \"^(/.*\\.eot)$\" !\nProxyPassMatch \"^(/.*\\.svg)$\" !\nProxyPassMatch \"^(/.*\\.woff)$\" !\nProxyPassMatch \"^(/.*\\.woff2)$\" !\nProxyPassMatch \"^(/.*\\.scss)$\" !\nProxyPassMatch \"^(/.*\\.json)$\" !\nProxyPassMatch \"^(/.*\\.jsonp)$\" !\nProxyPassMatch \"^(/.*\\.txt)$\" !\nProxyPassMatch \"^(/.*\\.html)$\" !\nSSLProxyVerify none\nSSLProxyCheckPeerCN off\nSSLProxyCheckPeerName off\nSSLProxyCheckPeerExpire off\nUseCanonicalName Off\nUseCanonicalPhysicalPort Off\nProxyPreserveHost On\n#ProxyAddHeaders Off\nProxyRequests Off\nProxyPass \"/oneshield\" \"https://app-server.core.svc.cluster.local:8443/oneshield\" timeout=300\nProxyPassReverse \"/oneshield\" \"https://core.domain.com/oneshield\" timeout=300\nProxyPass \"/Soa6Web\" \"https://app-server.core.svc.cluster.local:8443/Soa6Web\" timeout=300\nProxyPassReverse \"/Soa6Web\" \"https://core.domain.com/Soa6Web\" timeout=300\nProxyPass \"/Soa6WebTest\" \"https://app-server.core.svc.cluster.local:8443/Soa6WebTest\" timeout=300\nProxyPassReverse \"/Soa6WebTest\" \"https://core.domain.com/Soa6WebTest\" timeout=300\nProxyPass \"/axis2\" \"https://app-server.core.svc.cluster.local:8443/axis2\" timeout=300\nProxyPassReverse \"/axis2\" \"https://core.domain.com/axis2\" timeout=300\nProxyPass \"/_JSPPolicySearch\" \"https://app-server.core.svc.cluster.local:8443/_JSPPolicySearch\" timeout=300\nProxyPassReverse \"/_JSPPolicySearch\" \"https://core.domain.com/_JSPPolicySearch\" timeout=300\nProxyPass \"/_PolicyVerification\" \"https://app-server.core.svc.cluster.local:8443/_PolicyVerification\" timeout=300\nProxyPassReverse \"/_PolicyVerification\" \"https://core.domain.com/_PolicyVerification\" timeout=300\nProxyPass \"/TestWeb\" \"https://app-server.core.svc.cluster.local:8443/TestWeb\" timeout=300\nProxyPassReverse \"/TestWeb\" \"https://core.domain.com/TestWeb\" timeout=300\nProxyPass \"/DAPWeb\" \"https://dap-server.core.svc.cluster.local:8543/DAPWeb\" timeout=300\nProxyPassReverse \"/DAPWeb\" \"https://core.domain.com/DAPWeb\" timeout=300\nProxyPass \"/DisWeb\" \"https://dis-server.core.svc.cluster.local:8643/DisWeb\" timeout=300\nProxyPassReverse \"/DisWeb\" \"https://core.domain.com/DisWeb\" timeout=300\nProxyPass \"/DisWebTest\" \"https://dis-server.core.svc.cluster.local:8643/DisWebTest\" timeout=300\nProxyPassReverse \"/DisWebTest\" \"https://core.domain.com/DisWebTest\" timeout=300\nProxyPass \"/dms\" \"https://dms-server.core.svc.cluster.local:8743/dms\" timeout=300\nProxyPassReverse \"/dms\" \"https://core.domain.com/dms\" timeout=300\n### SSL Directives Section\nErrorLog logs/ssl_error_log\nTransferLog logs/ssl_access_log\nLogLevel warn\nSSLEngine on\n#SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP\nSSLCipherSuite ALL:!ADH:!NULL:!EXP:!SSLv2:!LOW:!MEDIUM:RC4+RSA:+HIGH\nSSLCertificateFile /etc/httpd/conf/ssl/star_oneshield_com.crt\nSSLCertificateKeyFile /etc/httpd/conf/ssl/jboss_key.key\nSSLCertificateChainFile /etc/httpd/conf/ssl/DigiCertCA.crt\nSSLProtocol All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1\nSSLHonorCipherOrder On\nHeader set Access-Control-Allow-Origin \"*\"\nHeader always set Strict-Transport-Security \"max-age=63072000; includeSubDomains; preload\"\nHeader always append X-Frame-Options SAMEORIGIN\nHeader always set X-Content-Type-Options nosniff\n<Files ~ \"\\.(cgi|shtml|phtml|php3?)$\">\n    SSLOptions +StdEnvVars\n</Files>\n<Directory \"/var/www/cgi-bin\">\n    SSLOptions +StdEnvVars\n</Directory>\n    SetEnvIf User-Agent \".*MSIE.*\" \\\n    nokeepalive ssl-unclean-shutdown \\\n    downgrade-1.0 force-response-1.0\n    CustomLog logs/ssl_request_log \\\n    \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n</VirtualHost>\n"
---
# Source: apache-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: apache-server
  namespace: core
  annotations: 
  labels:
    app: apache-server
    group: core   
spec:
  sessionAffinity: None
  selector:
    app: apache-server
    group: core    
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
---
# Source: apache-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apache-server
  namespace: core
  labels:
    app: apache-server
    group: core 
spec:
  selector:
    matchLabels:
      app: apache-server
      group: core  
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%       
  replicas: corereplicacount
  template:
    metadata:  
      annotations:      
        deployment-timestamp: "20240206131616"        
      labels:
        app: apache-server
        group: core           
    spec:     
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      volumes:
      - configMap:
          name: apache-configs
        name: apache-configs
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                  app: apache-server
                  group: core    
      initContainers:
      imagePullSecrets:
        - name: oneshield-registry          
      containers:      
        - name: apache-server
          image: "osdevops/core7:httpd_BI7_1507_1"
          imagePullPolicy: Always             
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - sleep 10    
          volumeMounts:
          - mountPath: /etc/httpd/conf/httpd.oneshield.conf
            name: apache-configs
            subPath: httpd.oneshield.conf  
          env:                                                     
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
---
# Source: apache-server/templates/autoscale.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: apache-server
  namespace: core
  labels:
    app: apache-server
    group: core 
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: apache-server
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
       averageUtilization: 60
       type: Utilization
---
# Source: apache-server/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apache-server
  namespace: core  
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "server: hide";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Xss-Protection: 1";
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/forec-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/session-cookie-name: stickounet
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"   
  labels:
    app: apache-server
    group: core  
spec:
  rules:  
  - host: core.domain.com 
    http:
      paths:
      - backend:          
          service:
            name: apache-server 
            port:
              number: 443            
        path: /
        pathType: ImplementationSpecific
  # TLS terminated At AWS loadbalanacer with ACM this line requires only tls terminated in cluster using as secrets
  # tls:
  # - hosts: 
  #   - core.domain.com
  #   secretName: osco-tls-prod